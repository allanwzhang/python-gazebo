// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vector8d.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "vector8d.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace tarotPB {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* Vector8d_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Vector8d_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_vector8d_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_vector8d_2eproto() {
  protobuf_AddDesc_vector8d_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "vector8d.proto");
  GOOGLE_CHECK(file != NULL);
  Vector8d_descriptor_ = file->message_type(0);
  static const int Vector8d_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, motor_1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, motor_2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, motor_3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, motor_4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, motor_5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, motor_6_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, motor_7_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, motor_8_),
  };
  Vector8d_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Vector8d_descriptor_,
      Vector8d::default_instance_,
      Vector8d_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, _has_bits_[0]),
      -1,
      -1,
      sizeof(Vector8d),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Vector8d, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_vector8d_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Vector8d_descriptor_, &Vector8d::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_vector8d_2eproto() {
  delete Vector8d::default_instance_;
  delete Vector8d_reflection_;
}

void protobuf_AddDesc_vector8d_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_vector8d_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\016vector8d.proto\022\014tarotPB.msgs\"\222\001\n\010Vecto"
    "r8d\022\017\n\007motor_1\030\001 \002(\001\022\017\n\007motor_2\030\002 \002(\001\022\017\n"
    "\007motor_3\030\003 \002(\001\022\017\n\007motor_4\030\004 \002(\001\022\017\n\007motor"
    "_5\030\005 \002(\001\022\017\n\007motor_6\030\006 \002(\001\022\017\n\007motor_7\030\007 \002"
    "(\001\022\017\n\007motor_8\030\010 \002(\001", 179);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "vector8d.proto", &protobuf_RegisterTypes);
  Vector8d::default_instance_ = new Vector8d();
  Vector8d::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_vector8d_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_vector8d_2eproto {
  StaticDescriptorInitializer_vector8d_2eproto() {
    protobuf_AddDesc_vector8d_2eproto();
  }
} static_descriptor_initializer_vector8d_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Vector8d::kMotor1FieldNumber;
const int Vector8d::kMotor2FieldNumber;
const int Vector8d::kMotor3FieldNumber;
const int Vector8d::kMotor4FieldNumber;
const int Vector8d::kMotor5FieldNumber;
const int Vector8d::kMotor6FieldNumber;
const int Vector8d::kMotor7FieldNumber;
const int Vector8d::kMotor8FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Vector8d::Vector8d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:tarotPB.msgs.Vector8d)
}

void Vector8d::InitAsDefaultInstance() {
}

Vector8d::Vector8d(const Vector8d& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:tarotPB.msgs.Vector8d)
}

void Vector8d::SharedCtor() {
  _cached_size_ = 0;
  motor_1_ = 0;
  motor_2_ = 0;
  motor_3_ = 0;
  motor_4_ = 0;
  motor_5_ = 0;
  motor_6_ = 0;
  motor_7_ = 0;
  motor_8_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Vector8d::~Vector8d() {
  // @@protoc_insertion_point(destructor:tarotPB.msgs.Vector8d)
  SharedDtor();
}

void Vector8d::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Vector8d::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Vector8d::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Vector8d_descriptor_;
}

const Vector8d& Vector8d::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_vector8d_2eproto();
  return *default_instance_;
}

Vector8d* Vector8d::default_instance_ = NULL;

Vector8d* Vector8d::New(::google::protobuf::Arena* arena) const {
  Vector8d* n = new Vector8d;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Vector8d::Clear() {
// @@protoc_insertion_point(message_clear_start:tarotPB.msgs.Vector8d)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Vector8d, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Vector8d*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(motor_1_, motor_8_);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Vector8d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tarotPB.msgs.Vector8d)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required double motor_1 = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &motor_1_)));
          set_has_motor_1();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_motor_2;
        break;
      }

      // required double motor_2 = 2;
      case 2: {
        if (tag == 17) {
         parse_motor_2:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &motor_2_)));
          set_has_motor_2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_motor_3;
        break;
      }

      // required double motor_3 = 3;
      case 3: {
        if (tag == 25) {
         parse_motor_3:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &motor_3_)));
          set_has_motor_3();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_motor_4;
        break;
      }

      // required double motor_4 = 4;
      case 4: {
        if (tag == 33) {
         parse_motor_4:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &motor_4_)));
          set_has_motor_4();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_motor_5;
        break;
      }

      // required double motor_5 = 5;
      case 5: {
        if (tag == 41) {
         parse_motor_5:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &motor_5_)));
          set_has_motor_5();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_motor_6;
        break;
      }

      // required double motor_6 = 6;
      case 6: {
        if (tag == 49) {
         parse_motor_6:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &motor_6_)));
          set_has_motor_6();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_motor_7;
        break;
      }

      // required double motor_7 = 7;
      case 7: {
        if (tag == 57) {
         parse_motor_7:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &motor_7_)));
          set_has_motor_7();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(65)) goto parse_motor_8;
        break;
      }

      // required double motor_8 = 8;
      case 8: {
        if (tag == 65) {
         parse_motor_8:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &motor_8_)));
          set_has_motor_8();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tarotPB.msgs.Vector8d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tarotPB.msgs.Vector8d)
  return false;
#undef DO_
}

void Vector8d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tarotPB.msgs.Vector8d)
  // required double motor_1 = 1;
  if (has_motor_1()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->motor_1(), output);
  }

  // required double motor_2 = 2;
  if (has_motor_2()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->motor_2(), output);
  }

  // required double motor_3 = 3;
  if (has_motor_3()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->motor_3(), output);
  }

  // required double motor_4 = 4;
  if (has_motor_4()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->motor_4(), output);
  }

  // required double motor_5 = 5;
  if (has_motor_5()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->motor_5(), output);
  }

  // required double motor_6 = 6;
  if (has_motor_6()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->motor_6(), output);
  }

  // required double motor_7 = 7;
  if (has_motor_7()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->motor_7(), output);
  }

  // required double motor_8 = 8;
  if (has_motor_8()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->motor_8(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:tarotPB.msgs.Vector8d)
}

::google::protobuf::uint8* Vector8d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:tarotPB.msgs.Vector8d)
  // required double motor_1 = 1;
  if (has_motor_1()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->motor_1(), target);
  }

  // required double motor_2 = 2;
  if (has_motor_2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->motor_2(), target);
  }

  // required double motor_3 = 3;
  if (has_motor_3()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->motor_3(), target);
  }

  // required double motor_4 = 4;
  if (has_motor_4()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->motor_4(), target);
  }

  // required double motor_5 = 5;
  if (has_motor_5()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->motor_5(), target);
  }

  // required double motor_6 = 6;
  if (has_motor_6()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->motor_6(), target);
  }

  // required double motor_7 = 7;
  if (has_motor_7()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->motor_7(), target);
  }

  // required double motor_8 = 8;
  if (has_motor_8()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->motor_8(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tarotPB.msgs.Vector8d)
  return target;
}

int Vector8d::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:tarotPB.msgs.Vector8d)
  int total_size = 0;

  if (has_motor_1()) {
    // required double motor_1 = 1;
    total_size += 1 + 8;
  }

  if (has_motor_2()) {
    // required double motor_2 = 2;
    total_size += 1 + 8;
  }

  if (has_motor_3()) {
    // required double motor_3 = 3;
    total_size += 1 + 8;
  }

  if (has_motor_4()) {
    // required double motor_4 = 4;
    total_size += 1 + 8;
  }

  if (has_motor_5()) {
    // required double motor_5 = 5;
    total_size += 1 + 8;
  }

  if (has_motor_6()) {
    // required double motor_6 = 6;
    total_size += 1 + 8;
  }

  if (has_motor_7()) {
    // required double motor_7 = 7;
    total_size += 1 + 8;
  }

  if (has_motor_8()) {
    // required double motor_8 = 8;
    total_size += 1 + 8;
  }

  return total_size;
}
int Vector8d::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:tarotPB.msgs.Vector8d)
  int total_size = 0;

  if (((_has_bits_[0] & 0x000000ff) ^ 0x000000ff) == 0) {  // All required fields are present.
    // required double motor_1 = 1;
    total_size += 1 + 8;

    // required double motor_2 = 2;
    total_size += 1 + 8;

    // required double motor_3 = 3;
    total_size += 1 + 8;

    // required double motor_4 = 4;
    total_size += 1 + 8;

    // required double motor_5 = 5;
    total_size += 1 + 8;

    // required double motor_6 = 6;
    total_size += 1 + 8;

    // required double motor_7 = 7;
    total_size += 1 + 8;

    // required double motor_8 = 8;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Vector8d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tarotPB.msgs.Vector8d)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Vector8d* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Vector8d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tarotPB.msgs.Vector8d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tarotPB.msgs.Vector8d)
    MergeFrom(*source);
  }
}

void Vector8d::MergeFrom(const Vector8d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tarotPB.msgs.Vector8d)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_motor_1()) {
      set_motor_1(from.motor_1());
    }
    if (from.has_motor_2()) {
      set_motor_2(from.motor_2());
    }
    if (from.has_motor_3()) {
      set_motor_3(from.motor_3());
    }
    if (from.has_motor_4()) {
      set_motor_4(from.motor_4());
    }
    if (from.has_motor_5()) {
      set_motor_5(from.motor_5());
    }
    if (from.has_motor_6()) {
      set_motor_6(from.motor_6());
    }
    if (from.has_motor_7()) {
      set_motor_7(from.motor_7());
    }
    if (from.has_motor_8()) {
      set_motor_8(from.motor_8());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Vector8d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tarotPB.msgs.Vector8d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vector8d::CopyFrom(const Vector8d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tarotPB.msgs.Vector8d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vector8d::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000ff) != 0x000000ff) return false;

  return true;
}

void Vector8d::Swap(Vector8d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Vector8d::InternalSwap(Vector8d* other) {
  std::swap(motor_1_, other->motor_1_);
  std::swap(motor_2_, other->motor_2_);
  std::swap(motor_3_, other->motor_3_);
  std::swap(motor_4_, other->motor_4_);
  std::swap(motor_5_, other->motor_5_);
  std::swap(motor_6_, other->motor_6_);
  std::swap(motor_7_, other->motor_7_);
  std::swap(motor_8_, other->motor_8_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Vector8d::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Vector8d_descriptor_;
  metadata.reflection = Vector8d_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Vector8d

// required double motor_1 = 1;
bool Vector8d::has_motor_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Vector8d::set_has_motor_1() {
  _has_bits_[0] |= 0x00000001u;
}
void Vector8d::clear_has_motor_1() {
  _has_bits_[0] &= ~0x00000001u;
}
void Vector8d::clear_motor_1() {
  motor_1_ = 0;
  clear_has_motor_1();
}
 double Vector8d::motor_1() const {
  // @@protoc_insertion_point(field_get:tarotPB.msgs.Vector8d.motor_1)
  return motor_1_;
}
 void Vector8d::set_motor_1(double value) {
  set_has_motor_1();
  motor_1_ = value;
  // @@protoc_insertion_point(field_set:tarotPB.msgs.Vector8d.motor_1)
}

// required double motor_2 = 2;
bool Vector8d::has_motor_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Vector8d::set_has_motor_2() {
  _has_bits_[0] |= 0x00000002u;
}
void Vector8d::clear_has_motor_2() {
  _has_bits_[0] &= ~0x00000002u;
}
void Vector8d::clear_motor_2() {
  motor_2_ = 0;
  clear_has_motor_2();
}
 double Vector8d::motor_2() const {
  // @@protoc_insertion_point(field_get:tarotPB.msgs.Vector8d.motor_2)
  return motor_2_;
}
 void Vector8d::set_motor_2(double value) {
  set_has_motor_2();
  motor_2_ = value;
  // @@protoc_insertion_point(field_set:tarotPB.msgs.Vector8d.motor_2)
}

// required double motor_3 = 3;
bool Vector8d::has_motor_3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Vector8d::set_has_motor_3() {
  _has_bits_[0] |= 0x00000004u;
}
void Vector8d::clear_has_motor_3() {
  _has_bits_[0] &= ~0x00000004u;
}
void Vector8d::clear_motor_3() {
  motor_3_ = 0;
  clear_has_motor_3();
}
 double Vector8d::motor_3() const {
  // @@protoc_insertion_point(field_get:tarotPB.msgs.Vector8d.motor_3)
  return motor_3_;
}
 void Vector8d::set_motor_3(double value) {
  set_has_motor_3();
  motor_3_ = value;
  // @@protoc_insertion_point(field_set:tarotPB.msgs.Vector8d.motor_3)
}

// required double motor_4 = 4;
bool Vector8d::has_motor_4() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Vector8d::set_has_motor_4() {
  _has_bits_[0] |= 0x00000008u;
}
void Vector8d::clear_has_motor_4() {
  _has_bits_[0] &= ~0x00000008u;
}
void Vector8d::clear_motor_4() {
  motor_4_ = 0;
  clear_has_motor_4();
}
 double Vector8d::motor_4() const {
  // @@protoc_insertion_point(field_get:tarotPB.msgs.Vector8d.motor_4)
  return motor_4_;
}
 void Vector8d::set_motor_4(double value) {
  set_has_motor_4();
  motor_4_ = value;
  // @@protoc_insertion_point(field_set:tarotPB.msgs.Vector8d.motor_4)
}

// required double motor_5 = 5;
bool Vector8d::has_motor_5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Vector8d::set_has_motor_5() {
  _has_bits_[0] |= 0x00000010u;
}
void Vector8d::clear_has_motor_5() {
  _has_bits_[0] &= ~0x00000010u;
}
void Vector8d::clear_motor_5() {
  motor_5_ = 0;
  clear_has_motor_5();
}
 double Vector8d::motor_5() const {
  // @@protoc_insertion_point(field_get:tarotPB.msgs.Vector8d.motor_5)
  return motor_5_;
}
 void Vector8d::set_motor_5(double value) {
  set_has_motor_5();
  motor_5_ = value;
  // @@protoc_insertion_point(field_set:tarotPB.msgs.Vector8d.motor_5)
}

// required double motor_6 = 6;
bool Vector8d::has_motor_6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Vector8d::set_has_motor_6() {
  _has_bits_[0] |= 0x00000020u;
}
void Vector8d::clear_has_motor_6() {
  _has_bits_[0] &= ~0x00000020u;
}
void Vector8d::clear_motor_6() {
  motor_6_ = 0;
  clear_has_motor_6();
}
 double Vector8d::motor_6() const {
  // @@protoc_insertion_point(field_get:tarotPB.msgs.Vector8d.motor_6)
  return motor_6_;
}
 void Vector8d::set_motor_6(double value) {
  set_has_motor_6();
  motor_6_ = value;
  // @@protoc_insertion_point(field_set:tarotPB.msgs.Vector8d.motor_6)
}

// required double motor_7 = 7;
bool Vector8d::has_motor_7() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Vector8d::set_has_motor_7() {
  _has_bits_[0] |= 0x00000040u;
}
void Vector8d::clear_has_motor_7() {
  _has_bits_[0] &= ~0x00000040u;
}
void Vector8d::clear_motor_7() {
  motor_7_ = 0;
  clear_has_motor_7();
}
 double Vector8d::motor_7() const {
  // @@protoc_insertion_point(field_get:tarotPB.msgs.Vector8d.motor_7)
  return motor_7_;
}
 void Vector8d::set_motor_7(double value) {
  set_has_motor_7();
  motor_7_ = value;
  // @@protoc_insertion_point(field_set:tarotPB.msgs.Vector8d.motor_7)
}

// required double motor_8 = 8;
bool Vector8d::has_motor_8() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Vector8d::set_has_motor_8() {
  _has_bits_[0] |= 0x00000080u;
}
void Vector8d::clear_has_motor_8() {
  _has_bits_[0] &= ~0x00000080u;
}
void Vector8d::clear_motor_8() {
  motor_8_ = 0;
  clear_has_motor_8();
}
 double Vector8d::motor_8() const {
  // @@protoc_insertion_point(field_get:tarotPB.msgs.Vector8d.motor_8)
  return motor_8_;
}
 void Vector8d::set_motor_8(double value) {
  set_has_motor_8();
  motor_8_ = value;
  // @@protoc_insertion_point(field_set:tarotPB.msgs.Vector8d.motor_8)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace tarotPB

// @@protoc_insertion_point(global_scope)
